[include mainsail.cfg]
[include fluidd.cfg]
[include plr.cfg]
[include EBBCanRP2040.cfg]
#[include EBBCan.cfg
[include Knomi.cfg]
#[include znp_tjc_klipper]
#[include crowsnest.cfg]

[mcu]
canbus_uuid: cff16623c90a

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[printer]
kinematics:cartesian
max_velocity: 500
max_accel: 6000
#max_accel_to_decel: 5000
max_z_velocity: 20
max_z_accel: 300
square_corner_velocity: 5.0

[gcode_button kill_switch]
pin: !PE11
press_gcode: M112

[exclude_object]
[firmware_retraction]
[force_move]
enable_force_move : True
[respond]
[gcode_arcs]
[idle_timeout]
timeout: 2100
[display_status]
[pause_resume]
[include KAMP_Settings.cfg]
[include ./KAMP/Smart_Park.cfg]
[include ./KAMP/Line_Purge.cfg]

#####################################################################
#   X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
microsteps: 16
rotation_distance: 59.8519
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: -5
position_endstop: 815
position_max: 815.5
homing_speed: 80 #max 100
homing_retract_dist:10
second_homing_speed:10
homing_positive_dir:true
step_pulse_duration:0.000002

[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
microsteps: 16
rotation_distance: 59.8519
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
gear_ratio: 50:20
endstop_pin: PG9
position_min: 1
position_endstop: 785
position_max: 785
homing_speed: 80 #max 100
homing_retract_dist:10
second_homing_speed:10
homing_positive_dir:true
step_pulse_duration:0.000002
 
#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
microsteps: 16
rotation_distance: 8
gear_ratio: 50:20
full_steps_per_rotation: 200
endstop_pin: PG12 
position_endstop: 11
position_max: 1020
position_min: -15
homing_speed: 10
second_homing_speed: 3
homing_retract_dist: 5
homing_positive_dir:false

[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
microsteps: 16
rotation_distance: 8
gear_ratio: 50:20
full_steps_per_rotation: 200
endstop_pin:PG10

#####################################################################
#   TMC UART configuration
#####################################################################

#[tmc2209 stepper_x]
#uart_pin: PC4
#run_current: 1.6
#hold_current: 1.0
#interpolate:False

[tmc5160 stepper_x]
cs_pin:PC4
spi_software_sclk_pin:PA5
spi_software_mosi_pin:PA7
spi_software_miso_pin:PA6
spi_speed:200000
run_current: 1.6
hold_current: 1.2
sense_resistor: 0.033
interpolate:False

[tmc5160 stepper_y]
cs_pin:PD11
spi_software_sclk_pin:PA5
spi_software_mosi_pin:PA7
spi_software_miso_pin:PA6
spi_speed:200000
run_current: 2.4
hold_current: 1.8
sense_resistor: 0.033
interpolate:False

[tmc2209 stepper_z]
uart_pin: PC6
run_current: 1.00
hold_current: 1.0

[tmc2209 stepper_z1]
uart_pin: PC7
run_current: 1.00
hold_current: 1.0

[motor_constants ldo-42sth60-2004ac]
resistance: 0.45#2.1
inductance:0.00124 #0.0041
holding_torque: 1.300#0.85
max_current: 2.2
steps_per_revolution: 200

[motor_constants moons-ml23hs0l4350-000]
resistance: 0.56
inductance: 0.0013
holding_torque: 0.82
max_current: 3.5
steps_per_revolution: 200

[autotune_tmc stepper_y]
motor: ldo-42sth60-2004ac

[autotune_tmc stepper_x]
motor: moons-ml23hs0l4350-000

[force_move]
enable_force_move : true

[virtual_sdcard]
path: ~/printer_data/gcodes

#############################################################################
#   Accelerometer Config
############################################################################# 

[resonance_tester]
accel_chip: adxl345
min_freq: 5
max_freq: 90
accel_per_hz: 150
hz_per_sec: 2
probe_points:
    400, 400, 50

[gcode_macro Resonance_Test_X]
gcode:
    TEST_RESONANCES AXIS=X

[gcode_macro Resonance_Test_Y]
gcode:
    TEST_RESONANCES AXIS=Y

[gcode_macro Resonance_Test_Z]
gcode:
    TEST_RESONANCES AXIS=Z
#############################################################################
#   Input Shaper Config
#############################################################################

[input_shaper]
#shaper_freq_x: 66.66    
#shaper_freq_y: 42.05   
#shaper_type_x: mzv
#shaper_type_y: ei

[gcode_macro Shaper_Calibrate_All]
gcode:
    SHAPER_CALIBRATE

#####################################################################
#   Extruder EB SB2209 (Raspberry RP2040)
#####################################################################

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan:gpio28
min_temp: -120
max_temp: 100

[adxl345]
cs_pin: EBBCan:gpio1
spi_software_sclk_pin: EBBCan:gpio2
spi_software_mosi_pin: EBBCan:gpio0
spi_software_miso_pin: EBBCan:gpio3
axes_map: z,-y,x

[resonance_tester]
probe_points: 100, 100, 20
accel_chip: adxl345

[extruder]
step_pin: EBBCan:gpio18
dir_pin: EBBCan:gpio19
enable_pin: !EBBCan:gpio17
microsteps: 16
rotation_distance: 40
gear_ratio: 9:1
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan:gpio7
sensor_type: MAX31865
sensor_pin: EBBCan:gpio9
#spi_bus: spi1
spi_software_sclk_pin: EBBCan:gpio10
spi_software_mosi_pin: EBBCan:gpio8
spi_software_miso_pin: EBBCan:gpio11
rtd_nominal_r: 1000
rtd_reference_r: 4300
rtd_num_of_wires: 2
rtd_use_50Hz_filter: True
max_extrude_cross_section: 5
control: pid
pid_Kp: 32.123
pid_Ki: 1.846
pid_Kd: 139.735
min_temp: 0
max_temp: 350 
max_extrude_only_distance: 400
pressure_advance: 0.116
pressure_advance_smooth_time: 0.02
step_pulse_duration:0.000002
instantaneous_corner_velocity: 2.5

[verify_heater extruder]
max_error: 120
check_gain_time:20
hysteresis: 5
heating_gain: 2

[tmc2209 extruder]
uart_pin: EBBCan:gpio20
run_current: 0.65
stealthchop_threshold: 999999

[heater_fan Heatbreak_Cooling_Fan]
pin: EBBCan:gpio14
max_power: 1.0
shutdown_speed: 0
cycle_time: 0.010
kick_start_time: 0.100
heater: extruder
heater_temp: 10.0
fan_speed: 1.0
off_below: 0

[fan]
pin: EBBCan:gpio13
max_power: 1.0
shutdown_speed: 0
cycle_time: 0.010
hardware_pwm: False
kick_start_time: 0.500
off_below: 0

[neopixel hotend_rgb]
pin: EBBCan:gpio16
chain_count: 3
color_order: GRBW 

[delayed_gcode hotend_rgb]
initial_duration: 5.
gcode:
    {% if printer.extruder.temperature > 50 %}
        SET_LED LED=hotend_rgb RED=1 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1
        SET_LED LED=hotend_rgb RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1
        SET_LED LED=hotend_rgb RED=1 GREEN=0 BLUE=0 INDEX=3 TRANSMIT=1
    {% else %}
        SET_LED LED=hotend_rgb RED=0 GREEN=1 BLUE=0 INDEX=1 TRANSMIT=1
        SET_LED LED=hotend_rgb RED=0 GREEN=1 BLUE=0 INDEX=2 TRANSMIT=1
        SET_LED LED=hotend_rgb RED=0 GREEN=1 BLUE=0 INDEX=3 TRANSMIT=1
    {% endif %}
     UPDATE_DELAYED_GCODE ID=hotend_rgb DURATION=5

#[bltouch]
#sensor_pin: ^EBBCan:gpio21
#control_pin: EBBCan:gpio22

## NPN and PNP proximity switch types can be set by jumper
#[probe]
#pin: ^EBBCan:gpio6

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu # Sets the type of sensor for Klipper to read
sensor_mcu: eddy # Sets the MCU of the eddy probe tempereature sensor
min_temp: 10 # Sets the minimum tempereature for eddys tempereature sensor to operate
max_temp: 100 # Sets the maximum tempereature for eddys tempereature sensor to operate

[probe_eddy_current btt_eddy]
sensor_type: ldc1612
z_offset: 2
#i2c_address:
i2c_mcu: eddy  # This value is good for the Eddy USB but would need to be adjusted for the Eddy Coil according to the MCU you have used.
i2c_bus: i2c0f # This value is good for the Eddy USB but would need to be adjusted for the Eddy Coil according to the I2C bus you have used.
# Measure the offsets below using the method described here: https://www.klipper3d.org/Probe_Calibrate.html#calibrating-probe-x-and-y-offsets
# For a standard Voron stealthburner X carriage mount there should be no need to change the defaults below.
x_offset: 0
y_offset: -21
#reg_drive_current: 15

[bed_mesh]
horizontal_move_z: 10
speed: 120
# For the mesh dimensions below, the coordinates need to be reachable by the center of the probe. To calculate coordinates that will work, use the formula below:
# mesh x min = position_min_x + greater_of (15mm or x_offset) <--- in this term, only consider the x offset if it is positive, ignore if negative.
# mesh y min = position_min_y + greater_of (15mm or y_offset) <--- in this term, only consider the y offset if it is positive, ignore if negative.
# mesh x max = position_max_x - greater_of (15mm or |x_offset|) <--- in this term, only consider the x offset if it is negative, ignore if positive.
# mesh y max = position_max_y - greater_of (15mm or |y_offset|) <--- in this term, only consider the y offset if it is negative, ignore if positive.
# Example: Consider that you have a 300 x 300 bed with the max x and y positions being 300 and the min being 0. Your probe offsets are -20 for X and 10 for Y
# For mesh x min we ignore the x offset term because it is negative. Therefore mesh x min = 15
# For mesh y min we do not ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y min = 15
# For mesh x max we do not ignore the x offset term because it is negative. It is also greater than 15. Therefore mesh x max = 280
# For mesh y max we ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y max = 285
# The final result would be mesh_min: 15, 15 mesh_max: 280, 285
mesh_min: 16, 25  # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
mesh_max: 786, 746 # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
probe_count: 10, 10
algorithm: bicubic
#bicubic_tension:0.2
#mesh_pps: 4, 4
#fade_start: 1.0
#fade_end: 30.0
#scan_overshoot: 8 

[gcode_macro SET_GCODE_OFFSET]
rename_existing: SET_GCODE_OFFSET_ORIG
variable_restored: False  # Mark whether the var has been restored from NVM
variable_runtime_offset: 0
gcode:
  {% if params.Z_ADJUST %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset + params.Z_ADJUST|float }
  {% endif %}
  {% if params.Z %}
    {% set paramList = rawparams.split() %}
    {% for i in range(paramList|length) %}
      {% if paramList[i]=="Z=0" %}
        {% set temp=paramList.pop(i) %}
        {% set temp="Z_ADJUST=" + (-printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset)|string %}
        {% if paramList.append(temp) %}{% endif %}
      {% endif %}
    {% endfor %}
    {% set rawparams=paramList|join(' ') %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE=0
  {% endif %}
  SET_GCODE_OFFSET_ORIG { rawparams }

# This macro automates a lot of the frequency mapping process and simplifies the steps significantly.
[gcode_macro PROBE_EDDY_CURRENT_CALIBRATE_AUTO]
gcode:
  BED_MESH_CLEAR
  G28 X Y
  G90 # Abs positioning
  G1 X620.5 Y203 F6000
  {% if 'z' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z={ printer.toolhead.axis_maximum.z-1 } # Allows the user to work it down until it touches.
  {% endif %}
  PROBE_EDDY_CURRENT_CALIBRATE CHIP=btt_eddy {rawparams}

#This macro is optional but useful if you want to run a rapid scan before each print. Simply uncomment it and add BED_MESH_SCAN to your print start code.
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BTT_BED_MESH_CALIBRATE
gcode:
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
  BTT_BED_MESH_CALIBRATE PROFILE=default METHOD=automatic
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg

[gcode_macro BED_MESH_RAPID_CALIBRATE]
gcode:
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
  BTT_BED_MESH_CALIBRATE PROFILE=default METHOD=rapid_scan HORIZONTAL_MOVE_Z=5
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg

[gcode_macro CALIBRATE_EDDY_DRIVE_CURRENT]
gcode:
  G1 X620.5 Y203 Z20 F6000
  LDC_CALIBRATE_DRIVE_CURRENT CHIP=btt_eddy

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin:PA2
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PF3
smooth_time: 0.1
#control = pid
#pid_Kp  = 74.859
#pid_Ki  = 0.755 
#pid_Kd  = 1855.577
min_temp: 0
max_temp: 130

[verify_heater heater_bed]
max_error: 600
check_gain_time:120
hysteresis: 10
heating_gain: 2

[heater_generic heater_bed1]
gcode_id:M108
heater_pin:PA3
max_power:1.0
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin:PF4
smooth_time: 0.1
#control = pid
#pid_Kp  = 72.991
#pid_Ki  = 0.716 
#pid_Kd  = 1861.270
min_temp: 0
max_temp: 130

[verify_heater heater_bed1]
max_error: 600
check_gain_time:120
hysteresis: 10
heating_gain: 2

[heater_generic heater_bed2]
gcode_id:M105
heater_pin:PB10
max_power:1.0
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin:PF5
smooth_time: 0.1
#control = pid
#pid_Kp  = 73.163 
#pid_Ki  = 0.729 
#pid_Kd  = 1835.468
min_temp: 0
max_temp: 130

[verify_heater heater_bed2]
max_error: 600
check_gain_time:120
hysteresis: 10
heating_gain: 2

[heater_generic heater_bed3]
gcode_id:M110
heater_pin:PB11
max_power:1.0
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin:PF6
smooth_time: 0.1
#control = pid
#pid_Kp  = 70.591 
#pid_Ki  = 1.055 
#pid_Kd  = 1180.632
min_temp: 0
max_temp: 130

[verify_heater heater_bed3]
max_error: 600
check_gain_time:120
hysteresis: 10
heating_gain: 2

#####################################################################
#   Fan Control
#####################################################################

[controller_fan Boardfan]
pin: PA8
fan_speed: 1
stepper: stepper_x
idle_timeout: 3600

[controller_fan Boardfan2]
pin: PE5
fan_speed: 1
stepper: stepper_x
idle_timeout: 3600

#####################################################################
# Displays
#####################################################################

#[display]
  #output_pin: gpio14
  #input_pin: gpio15
  #serial: /dev/ttyAMA0 
  #baud: 9600

#####################################################################
# EXP1 / EXP2 (display) pins
##################################################################### 

#[board_pins]
#aliases:
    #EXP1 header
    #EXP1_1=PE8, EXP1_2=PE7,
    #EXP1_3=PE9, EXP1_4=PE10,
    #EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    #EXP1_7=PE14, EXP1_8=PE15,
    #EXP1_9=<GND>, EXP1_10=<5V>,

    #EXP2 header
    #EXP2_1=PA6, EXP2_2=PA5,
    #EXP2_3=PB1, EXP2_4=PA4,
    #EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    #EXP2_7=PC15, EXP2_8=<RST>,
    #EXP2_9=<GND>, EXP2_10=PC5
    
#####################################################################
#   LED Control
#####################################################################

[output_pin button_LED]
pin: PD15
pwm:true
shutdown_value: 0
value:1
cycle_time: 0.01

#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 7200
gcode:
  {% if printer[printer.toolhead.extruder].temperature > 160 %}
  {action_respond_info("Extruder powered down on idle timeout.")}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={140}
  SET_IDLE_TIMEOUT TIMEOUT=259200
  {% else %}
  TURN_OFF_HEATERS
  {% endif %}

# [safe_z_home]
# home_xy_position: 605,205
# speed: 150
# z_hop: 10           
# z_hop_speed: 5

[homing_override]
gcode: 
    {% set x_park = 407.5 | float %} 
    {% set y_park = 387.5 | float %}
    M400
    {% if (printer.gcode_move.position.z) < 10 %}
    G91
    G1 Z20 F600
    G90
    {% endif %}

    {% if params.X is undefined and params.Y is undefined and params.Z is undefined %} 
    SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=flag_home_x VALUE="{1}"
    SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=flag_home_y VALUE="{1}"
    SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=flag_home_x VALUE="{1}"
    SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=flag_home_y VALUE="{1}"
    G28.1 X Y
    M400
    G1 X{x_park} Y{y_park} F6000
    G28.1 Z
    {% endif %}

    {% if params.X is defined %}
    G28.1 X
    SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=flag_home_x VALUE="{1}"
    SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=flag_home_x VALUE="{1}"
    {% endif %}

    {% if params.Y is defined %}
    G28.1 Y
    SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=flag_home_y VALUE="{1}"
    SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=flag_home_y VALUE="{1}"
    {% endif %}
    
    {% if params.Z is defined %}
    G90 
    G1 X{x_park} Y{y_park} F6000
    G28.1 Z
    G90
    G1 Z10 F600
    SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=flag_home_x VALUE="{1}"
    SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=flag_home_y VALUE="{1}"
    SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=flag_home_x VALUE="{1}"
    SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=flag_home_y VALUE="{1}"
    {% endif %}

[z_tilt]
z_positions: 
    -50,400
    980,400
points: 
    200,400
    600,400
speed: 50
horizontal_move_z: 4
retries: 10
retry_tolerance: 0.01

#####################################################################
#   Macros
##################################################################### 

[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{x_park} Y{y_park} Z30  

#############################################################################
#   Print Start & End Macros
#############################################################################

[gcode_macro PRINT_START]         
gcode:
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=flag_print_status VALUE="{0}"
    M400
    SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=flag_print_status VALUE="{1}"
    M400
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True
	  G92 E0
    BED_MESH_CLEAR                                           
	  G90
    BED_MESH_PROFILE LOAD=default   
    CLEAR_PAUSE
    # C1  
    M117 Printing
    
    [gcode_macro PRINT_END]
gcode:
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    clear_last_file
    {% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
    {% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
    {% set RUN_DECEL    = printer.configfile.settings['printer'].max_accel_to_decel|float %}
    M400
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=flag_print_status VALUE="{0}"
    M400
    SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=flag_print_status VALUE="{1}"
    M400
    SET_VELOCITY_LIMIT VELOCITY={RUN_VELOCITY} ACCEL={RUN_ACCEL} ACCEL_TO_DECEL={RUN_DECEL}
    M220 S100
    M221 S100
    {% set z = params.Z|default(200)|int %}
    {% if (printer.gcode_move.position.z+10) < z %}   #If the current gcode-Z position is less than the maximum limit position
      G90                            ; absolute positioning
      G1 Z{z+10} F6000                ; park nozzle at rear
    {% endif %}
    TURN_OFF_HEATERS
    M107
    M84

#############################################################################
#   Pause, Resume & Cancel Macros
#############################################################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
variable_flag_print_status: 1
variable_flag_home_x: 0
variable_flag_home_y: 0
gcode:
    {%if flag_home_x > 0.5 and flag_home_y > 0.5%}
      {% if flag_print_status > 0.5 %}
        M400  
      {% set z = params.Z|default(200)|int %}                                                   
      {% set E = (params.E|default(2))|float %}
      {% set x_park = params.X|default(printer.toolhead.axis_minimum.x+30)|int %} 
      {% set y_park = params.Y|default(printer.toolhead.axis_minimum.y+30)|int %} 
        M400
      {% set position = printer.gcode_move.gcode_position %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_x VALUE="{position.x}"
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_y VALUE="{position.y}"
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_z VALUE="{position.z}"
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_e VALUE="{position.e}"
      {% if printer[printer.toolhead.extruder].temperature > 150 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
      {% endif %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=bed_temp VALUE={printer['heater_bed'].target}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=bed_temp1 VALUE={printer['heater_generic heater_bed1'].target}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=bed_temp2 VALUE={printer['heater_generic heater_bed2'].target}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=bed_temp3 VALUE={printer['heater_generic heater_bed3'].target}
        SAVE_GCODE_STATE NAME=timelapse_state_a
        M83
        G91
        G1 E-2 X3 Z1 F2100
        G1 Z4 F600
        SAVE_GCODE_STATE NAME=timelapse_state_b
        G90
      {% if (printer.gcode_move.position.z+10) < z %} 
        G1 Z{z+10} X{x_park} Y{y_park} E-20 F6000 
      {% else %}
        G1 X{x_park} Y{y_park} E-20 F6000
      {% endif %}
        M400
        SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=flag_print_status VALUE="{0}"
        M400
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=flag_print_status VALUE="{1}"
        M25
        SET_IDLE_TIMEOUT TIMEOUT=1800
        M400
      {% endif %}
    {% endif %}
  
[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_flag_print_status: 1
variable_zhop: 0
variable_etemp: 0
variable_bed_temp: 0
variable_bed_temp1: 0
variable_bed_temp2: 0
variable_bed_temp3: 0
variable_saved_x: 0.0
variable_saved_y: 0.0
variable_saved_z: 0.0
variable_saved_e: 0.0
gcode:
    {% if flag_print_status > 0.5 %}
    M25
    {% set e = params.E|default(2)|int %}   
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp}
    SET_HEATER_TEMPERATURE HEATER=heater_bed1 TARGET={bed_temp1}
    SET_HEATER_TEMPERATURE HEATER=heater_bed2 TARGET={bed_temp2}
    SET_HEATER_TEMPERATURE HEATER=heater_bed3 TARGET={bed_temp3}
    {% if printer[printer.toolhead.extruder].temperature < etemp-4 %}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp-4} MAXIMUM={etemp+50}
    {% endif %}
    M400
    G91
    M83
    G1 E100 F200	
    G4 P2000	
    G1 X-20 F15000
    G1 X20
    G1 X-20
    G1 X20
    G1 X-20
    G1 X20
    G90
    G92 E{saved_e}
    M400
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=flag_print_status VALUE="{0}"
    M400
    SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=flag_print_status VALUE="{1}"
    M400
    RESTORE_GCODE_STATE NAME=timelapse_state_b MOVE=1 MOVE_SPEED=250
    M400
    RESTORE_GCODE_STATE NAME=timelapse_state_a MOVE=1 MOVE_SPEED=50	
    M400
    M24
    {% else %}
    M400
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
variable_flag_home_x: 0
variable_flag_home_y: 0
gcode:
      clear_last_file    
      M400
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=flag_print_status VALUE="{0}"
      M400
      SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=flag_print_status VALUE="{1}"
      M400
      {% set z = params.Z|default(200)|int %}  
      {% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
      {% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
      SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} 
      SDCARD_RESET_FILE
      M220 S100
      M221 S100
      {%if flag_home_x > 0.5 and flag_home_y > 0.5%}
        M400                          ; wait for buffer to clear
        M83                           ; zero the extruder
        G1 E-2.0 F1200               ; retract filament
        {%if (printer.gcode_move.position.z+10) < z %}
        G90 
        G1 X407.5 Y387.5 Z{z+10} F6000 
        {% else %}
        G91                           ; relative positioning
        G1 Z5 F600
        G90 
        G1 X407.5 Y387.5 F6000 
        {% endif %}
      {% else %}
      G91
      G1 Z5 F600
      {% endif %}        
      TURN_OFF_HEATERS
      M107                           ; turn off fan
      G90
      M82
      M84

#############################################################################
#   Filament Sensor & Change Macros
#############################################################################

[filament_switch_sensor fila]
pause_on_runout: True
runout_gcode:
            SET_FILAMENT_SENSOR SENSOR=fila ENABLE=1
event_delay: 3.0
pause_delay: 0.5
switch_pin: PC0

[gcode_macro M600]
gcode:
  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}
  {% set default_e = 100 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'park_x' in svv %}
      {% set default_x = svv.park_x %}
    {% endif %}
    {% if 'park_y' in svv %}
      {% set default_y = svv.park_y %}
    {% endif %}
    {% if 'bowden_len' in svv %}
      {% set default_e = svv.bowden_len %}
    {% endif %}
  {% endif %}

  {% set x = params.X|default(default_x)|float %}
  {% set y = params.Y|default(default_y)|float %}
  {% set z = params.Z|default(20)|float %}
  {% set e = params.E|default(default_e)|float %}

  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Already paused")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    PAUSE_PARK X={x} Y={y} Z={z}
    M702 U{e}
  {% endif %}

#[gcode_macro M106]
#rename_existing:M106.1
#gcode:
    #{% if params.P is defined %}
      #{% if params.S is defined %}
        #SET_PIN PIN=fan{params.P|int} VALUE={params.S|int}
      #{% else %}
        #SET_PIN PIN=fan{params.P|int} VALUE=255
      #{% endif %}
    #{% else %}
      #{% if params.S is defined %}
        #SET_PIN PIN=fan1 VALUE={params.S|int}
      #{% else %}
        #SET_PIN PIN=fan1 VALUE=255 
      #{% endif %}
    #{% endif %}


#[gcode_macro M107]
#rename_existing:M107.1
gcode:
    #{% if params.P is defined %}
      #{% if params.S is defined %}
        #SET_PIN PIN=fan{params.P|int} VALUE={params.S|int}
      #{% else %}
        #SET_PIN PIN=fan{params.P|int} VALUE=0
      #{% endif %}
    #{% else %}
      #{% if params.S is defined %}
        #SET_PIN PIN=fan1 VALUE={params.S|int}
      #{% else %}
        #SET_PIN PIN=fan1 VALUE=0
      #{% endif %}
    #{% endif %}

[delayed_gcode KINEMATIC_POSITION]
initial_duration:0.5
gcode:
      SET_KINEMATIC_POSITION X={ printer.toolhead.axis_maximum.x/2 }
      SET_KINEMATIC_POSITION Y={ printer.toolhead.axis_maximum.y/2 }
      SET_KINEMATIC_POSITION Z=0

[gcode_macro M84]
rename_existing:M84.1
gcode:
      SET_STEPPER_ENABLE STEPPER=stepper_x   enable=0
      SET_STEPPER_ENABLE STEPPER=stepper_y   enable=0
      SET_STEPPER_ENABLE STEPPER=stepper_z   enable=0
      SET_STEPPER_ENABLE STEPPER=stepper_z1  enable=0
      SET_STEPPER_ENABLE STEPPER=extruder    enable=0
      SET_KINEMATIC_POSITION
      SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=flag_home_x VALUE="{0}"
      SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=flag_home_y VALUE="{0}"
      SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=flag_home_x VALUE="{0}"
      SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=flag_home_y VALUE="{0}"

[gcode_macro M140]
rename_existing: M140.6245197
gcode:
  {% if "T" in params %}
    {% set heater_bed = "heater_bed" ~ params.T|replace('0', '') %}
    SET_HEATER_TEMPERATURE HEATER={heater_bed} TARGET={params.S|default(0)|int}
  {% else %}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.S|int}
    SET_HEATER_TEMPERATURE HEATER=heater_bed1 TARGET={params.S|int}
    SET_HEATER_TEMPERATURE HEATER=heater_bed2 TARGET={params.S|int}
    SET_HEATER_TEMPERATURE HEATER=heater_bed3 TARGET={params.S|int}    
  {% endif %}

[gcode_macro M190]
rename_existing: M190.6245197
gcode:
  {% set s = params.S|float %}
  {% if "T" in params %}
    {% set heater_bed = "heater_bed" ~ params.T|replace('0', '') %}
    {% set sensor = heater_bed if heater_bed in
        printer.heaters.available_heaters 
      else ("heater_generic heater_bed" ~ params.T|replace('0', '')) %}
    SET_HEATER_TEMPERATURE HEATER={heater_bed} TARGET={params.S|default(0)|int}
    TEMPERATURE_WAIT SENSOR="{sensor}" MINIMUM={s-2}  MAXIMUM={s+50}
    M118 {heater_bed} heating is complete.
  {% else %}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.S|int}
    SET_HEATER_TEMPERATURE HEATER=heater_bed1 TARGET={params.S|int}
    SET_HEATER_TEMPERATURE HEATER=heater_bed2 TARGET={params.S|int}
    SET_HEATER_TEMPERATURE HEATER=heater_bed3 TARGET={params.S|int}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-3}  MAXIMUM={s+50}
    TEMPERATURE_WAIT SENSOR="heater_generic heater_bed1" MINIMUM={s-3}  MAXIMUM={s+50}
    TEMPERATURE_WAIT SENSOR="heater_generic heater_bed2" MINIMUM={s-3}  MAXIMUM={s+50}
    TEMPERATURE_WAIT SENSOR="heater_generic heater_bed3" MINIMUM={s-3}  MAXIMUM={s+50}
    M118 Hot bed heating is complete.
  {% endif %}

[include moonraker_obico_macros.cfg]

[gcode_macro NOZZLE_CHANGE]
gcode: 
  {% set NOZZLE_DIAMETER = params.NOZZLE_DIAMETER|default(printer.save_variables.variables.nozzle_diameter)|float %}
  SAVE_VARIABLE VARIABLE=nozzle_diameter VALUE='{NOZZLE_DIAMETER}'
    {% if 'z' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z={ printer.toolhead.axis_maximum.z-1 } # Allows the user to work it down until it touches.
  {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe_eddy_current btt_eddy]
#*# calibrate =
#*# 	0.050000:3238997.837,0.090000:3238766.017,0.130000:3238516.547,
#*# 	0.170000:3238275.270,0.210000:3237845.220,0.250000:3237195.455,
#*# 	0.290000:3236496.007,0.330000:3235859.127,0.370000:3235203.954,
#*# 	0.410000:3234608.157,0.450000:3233961.659,0.490000:3233358.314,
#*# 	0.530000:3232748.303,0.570000:3232157.602,0.610000:3231574.525,
#*# 	0.650000:3231024.367,0.690000:3230469.441,0.730000:3229909.995,
#*# 	0.770000:3229380.849,0.810000:3228850.042,0.850000:3228293.909,
#*# 	0.890000:3227782.482,0.930000:3227250.418,0.970000:3226774.298,
#*# 	1.010000:3226298.362,1.050000:3225797.255,1.090000:3225338.846,
#*# 	1.130000:3224873.554,1.170000:3224391.034,1.210000:3223918.697,
#*# 	1.250000:3223466.629,1.290000:3223045.942,1.330000:3222608.496,
#*# 	1.370000:3222192.707,1.410000:3221766.016,1.450000:3221375.958,
#*# 	1.490000:3220964.999,1.530000:3220559.581,1.570000:3220159.451,
#*# 	1.610000:3219784.395,1.650000:3219436.457,1.690000:3219049.771,
#*# 	1.730000:3218693.685,1.770000:3218357.754,1.810000:3218005.514,
#*# 	1.850000:3217632.596,1.890000:3217318.139,1.930000:3216992.794,
#*# 	1.970000:3216668.131,2.010000:3216345.856,2.050000:3216055.480,
#*# 	2.090000:3215730.463,2.130000:3215412.642,2.170000:3215130.132,
#*# 	2.210000:3214812.409,2.250000:3214538.149,2.290000:3214247.408,
#*# 	2.330000:3213958.046,2.370000:3213702.040,2.410000:3213411.230,
#*# 	2.450000:3213175.850,2.490000:3212870.039,2.530000:3212640.203,
#*# 	2.570000:3212381.195,2.610000:3212148.137,2.650000:3211886.512,
#*# 	2.690000:3211623.372,2.730000:3211378.416,2.770000:3211162.135,
#*# 	2.810000:3210935.522,2.850000:3210718.639,2.890000:3210488.932,
#*# 	2.930000:3210245.861,2.970000:3210021.543,3.010000:3209823.834,
#*# 	3.050000:3209597.833,3.090000:3209403.269,3.130000:3209212.957,
#*# 	3.170000:3208986.483,3.210000:3208817.185,3.250000:3208604.726,
#*# 	3.290000:3208422.900,3.330000:3208222.282,3.370000:3208066.816,
#*# 	3.410000:3207863.004,3.450000:3207708.714,3.490000:3207520.754,
#*# 	3.530000:3207342.297,3.570000:3207147.208,3.610000:3206980.791,
#*# 	3.650000:3206830.629,3.690000:3206660.403,3.730000:3206505.817,
#*# 	3.770000:3206379.496,3.810000:3206190.597,3.850000:3206027.878,
#*# 	3.890000:3205869.743,3.930000:3205740.484,3.970000:3205584.705,
#*# 	4.010000:3205435.743,4.050000:3205285.972
#*# reg_drive_current = 15
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	4.365837, 4.413297, 4.483710, 4.491067, 4.494742, 4.496703, 4.516469, 4.536768, 4.463814, 4.430436
#*# 	4.314205, 4.393615, 4.432827, 4.479715, 4.504195, 4.500410, 4.551323, 4.553483, 4.404518, 4.300032
#*# 	4.317492, 4.397514, 4.397759, 4.486273, 4.550004, 4.522355, 4.563860, 4.548211, 4.325004, 4.143814
#*# 	4.246827, 4.307970, 4.378317, 4.468284, 4.502971, 4.511049, 4.487996, 4.426501, 4.244403, 4.085129
#*# 	4.140323, 4.209164, 4.264749, 4.365880, 4.386374, 4.448458, 4.379910, 4.285397, 4.149989, 4.054071
#*# 	4.089900, 4.205300, 4.319725, 4.388837, 4.359287, 4.405417, 4.271754, 4.175459, 4.120107, 4.162501
#*# 	4.123630, 4.217125, 4.271526, 4.325190, 4.296663, 4.331875, 4.287841, 4.263868, 4.186550, 4.151455
#*# 	4.110890, 4.177804, 4.179064, 4.237436, 4.243970, 4.227450, 4.275272, 4.337977, 4.223614, 4.114207
#*# 	4.087822, 4.172111, 4.189960, 4.243241, 4.240342, 4.328796, 4.351211, 4.428569, 4.315041, 4.179716
#*# 	4.015629, 4.127361, 4.204161, 4.295641, 4.305970, 4.465327, 4.439468, 4.539033, 4.406684, 4.281979
#*# x_count = 10
#*# y_count = 10
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 16.0
#*# max_x = 785.9499999999999
#*# min_y = 25.0
#*# max_y = 745.99
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 74.622
#*# pid_ki = 0.733
#*# pid_kd = 1900.074
#*#
#*# [heater_generic heater_bed1]
#*# control = pid
#*# pid_kp = 72.641
#*# pid_ki = 0.697
#*# pid_kd = 1893.207
#*#
#*# [heater_generic heater_bed2]
#*# control = pid
#*# pid_kp = 72.776
#*# pid_ki = 0.711
#*# pid_kd = 1861.237
#*#
#*# [heater_generic heater_bed3]
#*# control = pid
#*# pid_kp = 74.954
#*# pid_ki = 0.774
#*# pid_kd = 1815.768
#*#
#*# [input_shaper]
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 46.8
#*# shaper_type_y = 3hump_ei
#*# shaper_freq_y = 55.2
